Vagrant.configure(2) do |config|
 
  config.vm.define "ansible" do |dos|
    dos.vm.box = "centos/7"
    dos.vm.hostname = 'ansible.example.com'
    dos.vm.network "private_network", ip: "172.28.128.15"
    dos.vm.provision "shell", inline: $upeth1
    dos.vm.provision "shell", inline: <<-SHELL
      sudo useradd devops -m
      sudo echo "Ansible123" | passwd "devops" --stdin
      sudo mkdir /home/devops/.ssh/
      sudo chmod 0600 /home/devops/.ssh/
      sudo chown devops:devops /home/devops/.ssh/
      sudo ssh-keygen -b 2048 -t rsa -f /home/devops/.ssh/id_rsa -q -N ""
      sudo chmod 0600 /home/devops/.ssh/id_rsa
      sudo chown devops:devops /home/devops/.ssh/id_rsa
      sudo yum install -y epel-release
#      sleep 10
      sudo yum install -y ansible
      sudo mkdir /home/devops/ansible
      sudo rsync -a /etc/ansible/ /home/devops/ansible
      sudo chown -fR devops:devops /home/devops/ansible
      sudo mv /home/devops/ansible/hosts /home/devops/ansible/inventory
      sudo cp /home/devops/ansible/ansible.cfg /home/devops/ansible/ansible.cfg.orig
#      sudo sed -i 's/^#inventory \= \/etc\/ansible\/hosts\/host/ inventory\=\/home\/devops\/ansible\/inventory/g' /home/devops/ansible/ansible.cfg
      sudo sed -i 's/^\#inventory /inventory /g' /home/devops/ansible/ansible.cfg
      sudo sed -i 's/ \/etc\/ansible\/hosts$/\/home\/devops\/ansible\/inventory /g' /home/devops/ansible/ansible.cfg 
      sudo sed -i 's/^\#timeout = 10/timeout \= 60/g' /home/devops/ansible/ansible.cfg
      echo "echo [examservers] >> /home/devops/ansible/inventory" >/tmp/1.sh
      echo "echo centos1.example.com.local >> /home/devops/ansible/inventory" >>/tmp/1.sh 
      echo "echo centos2.example.com.local >> /home/devops/ansible/inventory" >>/tmp/1.sh
      echo "echo [ansiblehosts] >> /home/devops/ansible/inventory" >>/tmp/1.sh
      echo "echo ansible.example.com.local >> /home/devops/ansible/inventory" >>/tmp/1.sh
      echo "echo [hakers] >> /home/devops/ansible/inventory" >>/tmp/1.sh
      echo "echo centos2.example.com.local >> /home/devops/ansible/inventory" >>/tmp/1.sh
      sudo chmod +x /tmp/1.sh
      sudo /tmp/1.sh
    SHELL
  end
 
  config.vm.define "centos1" do |dos|
    dos.vm.box = "centos/7"
    dos.vm.hostname = 'centos1.example.com'
    dos.vm.network "private_network", ip: "172.28.128.16"
    dos.vm.provision "shell", inline: $upeth1
#    dos.vm.synced_folder "/home/111", "/vagrant_home"
    dos.vm.provision "shell", inline: <<-SHELL
      sudo useradd mgmt -m
      sudo echo "Ansible123" | passwd "mgmt" --stdin
      sudo echo "mgmt ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
      sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
      sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      sudo systemctl restart sshd
    SHELL
  end

  config.vm.define "centos2" do |dos|
    dos.vm.box = "centos/7"
    dos.vm.hostname = 'centos2.exmample.com'
    dos.vm.network "private_network", ip: "172.28.128.17"
    dos.vm.provision "shell", inline: $upeth1
    dos.vm.provision "shell", inline: <<-SHELL
      sudo useradd mgmt -m
      sudo echo "Ansible123" | passwd "mgmt" --stdin
      sudo echo "mgmt ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
      sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
      sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      sudo systemctl restart sshd
    SHELL
  end
 
end


#test_vm2.vm.network :private_network,
#      :ip => "10.20.5.45",
#      :libvirt__guest_ipv6 => "yes",
#      :libvirt__ipv6_address => "2001:db8:ca2:6::1",
#      :libvirt__ipv6_prefix => "64"
#    ansible.vm.network "private_network", ip: "172.28.128.15"

#$myscript = <<SCRIPT
#yum install epel-release -y
#yum install ansible -y
#yum install -y git
#sudo apt install ansible -y
#sudo apt install git -y
#SCRIPT

$upeth1 = <<SCRIPT
sudo ifup eth1
sleep 5
sudo ip a s
SCRIPT
